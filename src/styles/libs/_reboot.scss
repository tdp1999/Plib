/**************************/
/******* Documents ********/
/**************************/
// Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
*,
*::before,
*::after {
	box-sizing: border-box;
}

/**************************/
/********* Root ***********/
/**************************/
// Ability to the value of the root font sizes, affecting the value of `rem`.
// null by default, thus nothing is generated.
:root {
	font-size: $font-size-root;

	@if $enable-smooth-scroll {
		@media (prefers-reduced-motion: no-preference) {
			scroll-behavior: smooth;
		}
	}
}

/**************************/
/********** Body **********/
/**************************/
// 1. Remove the margin in all browsers.
// 2. As a best practice, apply a default `background-color`.
// 3. Prevent adjustments of font size after orientation changes in iOS.
// 4. Change the default tap highlight to be completely transparent in iOS.
body {
	margin: 0; // 1
	font-family: $font-family-base;
	text-align: $body-text-align;
	font-weight: $font-weight-light;
	background-color: $body-bg; // 2
	-webkit-text-size-adjust: 100%; // 3
	-webkit-tap-highlight-color: rgba($black, 0); // 4
}


/*********************************************/
/******* Typography & All kind of tags *******/
/*********************************************/
// 1. Remove top margins from headings
//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
//    margin for easier control within type scales as it avoids margin collapsing.
h1, h2, h3, h4, h5, h6 {
	margin-top: 0;
	margin-bottom: 0;
	font-weight: $font-weight-light;
}

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
	margin-top: 0;
	margin-bottom: $paragraph-margin-bottom;
}

b, strong {
	font-weight: $font-weight-bold;
}


/*********************************************/
/****** Native Setup & Element (Webkit) ******/
/*********************************************/

// Scrollbar
@media (min-width: 992px) {
	::-webkit-scrollbar {
		width: 8px;
	}

	::-webkit-scrollbar:horizontal {
		height: 8px;
	}

	::-webkit-scrollbar-track, ::-webkit-scrollbar-track:horizontal {
		background: rgba(0, 0, 0, 0.02);
		box-shadow: inset 0 0.5px 0 rgba(0, 0, 0, 0.07),
					inset 0 1px 0 rgba(0, 0, 0, 0.02),
					inset 0 -1px 0 rgba(0, 0, 0, 0.02),
					inset 0 -0.5px 0 rgba(0, 0, 0, 0.07);
	}

	::-webkit-scrollbar-thumb,
	::-webkit-scrollbar-thumb:horizontal {
		background: rgba(0, 0, 0, 0.4);
		border-radius: 999px;
	}

	::-webkit-scrollbar-thumb {
		box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.02);
	}
}

// Firefox Scrollbar
* {
	scrollbar-width: thin;
	scrollbar-color: rgba(0, 0, 0, 0.4) rgba(0, 0, 0, 0.02);
}

/*******************/
/****** Forms ******/
/*******************/

// 1. Allow labels to use `margin` for spacing.
label {
	display: inline-block; // 1
}

// Remove the default `border-radius` that macOS Chrome adds.
// See https://github.com/twbs/bootstrap/issues/24093
button {
	border-radius: 0;
}

// Explicitly remove focus outline in Chromium when it shouldn't be
// visible (e.g. as result of mouse click or touch tap). It already
// should be doing this automatically, but seems to currently be
// confused and applies its very visible two-tone outline anyway.
button:focus:not(:focus-visible) {
	outline: 0;
}

// 1. Remove the margin in Firefox and Safari
input,
button,
select,
optgroup,
textarea {
	margin: 0; // 1
	font-family: inherit;
	//@include font-size(inherit);
	line-height: inherit;
}

// Remove the inheritance of text transform in Firefox
button,
select {
	text-transform: none;
}

// Set the cursor for non-`<button>` buttons
//
// Details at https://github.com/twbs/bootstrap/pull/30562
[role="button"] {
	cursor: pointer;
}

select {
	// Remove the inheritance of word-wrap in Safari.
	// See https://github.com/twbs/bootstrap/issues/24990
	word-wrap: normal;

	// Undo the opacity change from Chrome
	&:disabled {
		opacity: 1;
	}
}

// Remove the dropdown arrow in Chrome from inputs built with datalists.
// See https://stackoverflow.com/a/54997118
[list]::-webkit-calendar-picker-indicator {
	display: none;
}

// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
// 3. Opinionated: add "hand" cursor to non-disabled button elements.
button,
[type="button"], // 1
[type="reset"],
[type="submit"] {
	-webkit-appearance: button; // 2

	@if $enable-button-pointers {
		&:not(:disabled) {
			cursor: pointer; // 3
		}
	}
}